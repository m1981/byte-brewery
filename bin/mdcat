#!/bin/bash

set -euo pipefail

# Function to safely handle each file
handle_file() {
    local file="$1"
    # Echo the filename, then the code block start marker to stdout
    echo "File: $file"
    echo '```'
    # Echo the contents of the current file to stdout
    cat "$file"
    # Echo the code block end marker to stdout
    echo -e "\n"
    echo '```'
    # Add a newline for spacing between files entries
    echo -e "\n"
}

# Check if any arguments were passed
if [ "$#" -eq 0 ]; then
  echo "Concatenate Source Files For GPT"
	echo "--------------------------------"
  echo "No files specified." >&2
	echo "Usage: mdcat file1 [file2 ...] > output.md"
  echo "Examples:"
  echo "  mdcat  file1.js file2.js > output.md"
  echo "  grep -l -r "currentChatIndex" . | xargs mdcat"
  echo "  find . -name '*.tsx' | xargs mdcat"
  echo "  find . -path '*/src/*.js' | grep -v 'node_modules' | grep -v 'stryker' | grep -v 'test'"
  exit 1
fi

# Iterate over the positional parameters
for file in "$@"; do
    # Check if file exists and is a regular file
    if [ -f "$file" ]; then
        handle_file "$file"
    else
        echo "Warning: File $file does not exist or is not a regular file. Skipping." >&2
    fi
done

echo "Concatenation complete." >&2
